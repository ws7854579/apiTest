2018-07-10 15:48:49,105 - Method_Log - INFO - 正在获取apilist===============================================
2018-07-10 15:48:49,279 - Method_Log - INFO - 已经获取到apilist并返回=========================
2018-07-10 15:48:49,878 - Method_Log - INFO - 正在获取apilist===============================================
2018-07-10 15:48:49,996 - Method_Log - INFO - 已经获取到apilist并返回=========================
2018-07-10 15:48:53,256 - Flask - INFO - 来到了Mock测试界面=========================
2018-07-10 15:48:53,298 - Flask - INFO - (0.6, 0.0)
2018-07-10 15:48:53,299 - Flask - INFO - [{'history_id': 1, 'url_name': u'test2', 'req_blob': '"{\\r\\n    \\"resCode\\": \\"2031\\",\\r\\n    \\"resMsg\\": \\"\\u9a8c\\u8bc1\\u5931\\u8d25\\",\\r\\n    \\"tid\\": \\"1035010815312032504148536\\",\\r\\n    \\"reqTid\\": \\"1234\\",\\r\\n    \\"sign\\": \\"7BBE1833582BC6D457497F8353A74B09\\"\\r\\n}"', 'url_path': u'test1/test'}, {'history_id': 2, 'url_name': u'test1', 'req_blob': '"{\\r\\n    \\"resCode\\": \\"2031\\",\\r\\n    \\"resMsg\\": \\"\\u9a8c\\u8bc1\\u5931\\u8d25\\",\\r\\n    \\"tid\\": \\"1035010815312032504148536\\",\\r\\n    \\"reqTid\\": \\"1234\\",\\r\\n    \\"sign\\": \\"7BBE1833582BC6D457497F8353A74B09\\"\\r\\n}"', 'url_path': u'test1/test2'}, {'history_id': 3, 'url_name': u'\u8eab\u4efd\u6838\u9a8c', 'req_blob': '"{\\"resCode\\":\\"2010\\",\\"resMsg\\":\\"\\u8eab\\u4efd\\u9a8c\\u8bc1\\u6210\\u529f\\",\\"tid\\":\\"1035005015311265343457585\\",\\"sign\\":\\"DA2978EA49CF70124E897277145C153D\\"}"', 'url_path': u'identity/auth'}, {'history_id': 4, 'url_name': u'1', 'req_blob': '"1"', 'url_path': u'1'}, {'history_id': 5, 'url_name': u'\u8eab\u4efd\u6838\u9a8c\u4e0d\u8fd4\u71672', 'req_blob': '{"tid": "1035005015310118542372260", "sign": "A74D2BFC07EFF29A597897E0BA48D427", "resCode": "2010", "resMsg": "\\u8eab\\u4efd\\u9a8c\\u8bc1\\u6210\\u529f"}', 'url_path': u'data-service/identity/auth'}, {'history_id': 6, 'url_name': u'\u8eab\u4efd\u6838\u9a8c\u4e0d\u8fd4\u7167', 'req_blob': '{"tid": "1035005015310118542372260", "sign": "A74D2BFC07EFF29A597897E0BA48D427", "resCode": "2010", "resMsg": "\\u8eab\\u4efd\\u9a8c\\u8bc1\\u6210\\u529f"}', 'url_path': u'identity/auth'}]
2018-07-10 15:50:07,828 - Flask - INFO - 进入add_mock_list
2018-07-10 15:50:07,846 - Flask - INFO - insert into test.mock_list (date,url_name,url,req_form,method,req_data,req_blob) values('2018-07-10 15:50:07','test3','test/test3','name=&cid=','get','name=刘七','{json}')
2018-07-10 15:50:08,003 - Flask - INFO - 来到了Mock测试界面=========================
2018-07-10 15:50:08,125 - Flask - INFO - (0.7, 0.0)
2018-07-10 15:50:08,125 - Flask - INFO - [{'history_id': 1, 'url_name': u'test3', 'req_blob': '{\r\n    "resCode": "2030",\r\n    "resMsg": "\xe9\xaa\x8c\xe8\xaf\x81\xe6\x88\x90\xe5\x8a\x9f",\r\n    "tid": "1035010815311921526305999",\r\n    "reqTid": "1234",\r\n    "sign": "7DA288ACCD06B78EE851B618B473991A"\r\n}', 'url_path': u'test/test3'}, {'history_id': 2, 'url_name': u'test2', 'req_blob': '"{\\r\\n    \\"resCode\\": \\"2031\\",\\r\\n    \\"resMsg\\": \\"\\u9a8c\\u8bc1\\u5931\\u8d25\\",\\r\\n    \\"tid\\": \\"1035010815312032504148536\\",\\r\\n    \\"reqTid\\": \\"1234\\",\\r\\n    \\"sign\\": \\"7BBE1833582BC6D457497F8353A74B09\\"\\r\\n}"', 'url_path': u'test1/test'}, {'history_id': 3, 'url_name': u'test1', 'req_blob': '"{\\r\\n    \\"resCode\\": \\"2031\\",\\r\\n    \\"resMsg\\": \\"\\u9a8c\\u8bc1\\u5931\\u8d25\\",\\r\\n    \\"tid\\": \\"1035010815312032504148536\\",\\r\\n    \\"reqTid\\": \\"1234\\",\\r\\n    \\"sign\\": \\"7BBE1833582BC6D457497F8353A74B09\\"\\r\\n}"', 'url_path': u'test1/test2'}, {'history_id': 4, 'url_name': u'\u8eab\u4efd\u6838\u9a8c', 'req_blob': '"{\\"resCode\\":\\"2010\\",\\"resMsg\\":\\"\\u8eab\\u4efd\\u9a8c\\u8bc1\\u6210\\u529f\\",\\"tid\\":\\"1035005015311265343457585\\",\\"sign\\":\\"DA2978EA49CF70124E897277145C153D\\"}"', 'url_path': u'identity/auth'}, {'history_id': 5, 'url_name': u'1', 'req_blob': '"1"', 'url_path': u'1'}, {'history_id': 6, 'url_name': u'\u8eab\u4efd\u6838\u9a8c\u4e0d\u8fd4\u71672', 'req_blob': '{"tid": "1035005015310118542372260", "sign": "A74D2BFC07EFF29A597897E0BA48D427", "resCode": "2010", "resMsg": "\\u8eab\\u4efd\\u9a8c\\u8bc1\\u6210\\u529f"}', 'url_path': u'data-service/identity/auth'}, {'history_id': 7, 'url_name': u'\u8eab\u4efd\u6838\u9a8c\u4e0d\u8fd4\u7167', 'req_blob': '{"tid": "1035005015310118542372260", "sign": "A74D2BFC07EFF29A597897E0BA48D427", "resCode": "2010", "resMsg": "\\u8eab\\u4efd\\u9a8c\\u8bc1\\u6210\\u529f"}', 'url_path': u'identity/auth'}]
2018-07-10 15:50:44,976 - Flask - INFO - 进入get_url
2018-07-10 15:50:45,020 - Flask - INFO - url：test/test3
2018-07-10 15:50:45,020 - Flask - INFO - {'res_data': None, 'url_name': u'test3', 'req_form': u'name=&cid=', 'req_blob': '{\r\n    "resCode": "2030",\r\n    "resMsg": "\xe9\xaa\x8c\xe8\xaf\x81\xe6\x88\x90\xe5\x8a\x9f",\r\n    "tid": "1035010815311921526305999",\r\n    "reqTid": "1234",\r\n    "sign": "7DA288ACCD06B78EE851B618B473991A"\r\n}', 'url': u'test/test3', 'method': u'get', 'req_data': u'name=\u5218\u4e03'}
2018-07-10 15:50:45,020 - Flask - INFO - test/test3
2018-07-10 15:50:45,020 - Flask - INFO - url和path相同
2018-07-10 15:50:45,020 - Flask - INFO - [u'name=\u5218\u4e03']
2018-07-10 15:50:45,020 - Flask - INFO - ['{\r\n    "resCode": "2030",\r\n    "resMsg": "\xe9\xaa\x8c\xe8\xaf\x81\xe6\x88\x90\xe5\x8a\x9f",\r\n    "tid": "1035010815311921526305999",\r\n    "reqTid": "1234",\r\n    "sign": "7DA288ACCD06B78EE851B618B473991A"\r\n}']
2018-07-10 15:50:45,022 - Flask - INFO - method==GET
2018-07-10 15:50:45,022 - Flask - INFO - 获取请求参数:刘七
2018-07-10 15:50:45,022 - Flask - INFO - 获取数据库中存储的请求参数：刘七
2018-07-10 15:50:45,022 - Flask - INFO - 在库中找到了相同的参数
2018-07-10 15:50:45,022 - Flask - INFO - {'res_data': None, 'url_name': u'test3', 'req_form': u'name=&cid=', 'req_blob': '{\r\n    "resCode": "2030",\r\n    "resMsg": "\xe9\xaa\x8c\xe8\xaf\x81\xe6\x88\x90\xe5\x8a\x9f",\r\n    "tid": "1035010815311921526305999",\r\n    "reqTid": "1234",\r\n    "sign": "7DA288ACCD06B78EE851B618B473991A"\r\n}', 'url': u'test/test3', 'method': u'get', 'req_data': u'name=\u5218\u4e03'}
2018-07-10 15:50:45,022 - Flask - INFO - req_data:name=刘七
2018-07-10 15:50:45,022 - Flask - INFO - url中请求的参数在库中找到了匹配项
2018-07-10 15:50:55,262 - Flask - INFO - 进入get_url
2018-07-10 15:50:55,302 - Flask - INFO - url：test/test3
2018-07-10 15:50:55,302 - Flask - INFO - {'res_data': None, 'url_name': u'test3', 'req_form': u'name=&cid=', 'req_blob': '{\r\n    "resCode": "2030",\r\n    "resMsg": "\xe9\xaa\x8c\xe8\xaf\x81\xe6\x88\x90\xe5\x8a\x9f",\r\n    "tid": "1035010815311921526305999",\r\n    "reqTid": "1234",\r\n    "sign": "7DA288ACCD06B78EE851B618B473991A"\r\n}', 'url': u'test/test3', 'method': u'get', 'req_data': u'name=\u5218\u4e03'}
2018-07-10 15:50:55,302 - Flask - INFO - test/test3
2018-07-10 15:50:55,303 - Flask - INFO - url和path相同
2018-07-10 15:50:55,303 - Flask - INFO - [u'name=\u5218\u4e03']
2018-07-10 15:50:55,303 - Flask - INFO - ['{\r\n    "resCode": "2030",\r\n    "resMsg": "\xe9\xaa\x8c\xe8\xaf\x81\xe6\x88\x90\xe5\x8a\x9f",\r\n    "tid": "1035010815311921526305999",\r\n    "reqTid": "1234",\r\n    "sign": "7DA288ACCD06B78EE851B618B473991A"\r\n}']
2018-07-10 15:50:55,303 - Flask - INFO - method==GET
2018-07-10 15:50:55,303 - Flask - INFO - 获取请求参数:刘七
2018-07-10 15:50:55,303 - Flask - INFO - 获取数据库中存储的请求参数：刘七
2018-07-10 15:50:55,303 - Flask - INFO - 在库中找到了相同的参数
2018-07-10 15:50:55,305 - Flask - INFO - {'res_data': None, 'url_name': u'test3', 'req_form': u'name=&cid=', 'req_blob': '{\r\n    "resCode": "2030",\r\n    "resMsg": "\xe9\xaa\x8c\xe8\xaf\x81\xe6\x88\x90\xe5\x8a\x9f",\r\n    "tid": "1035010815311921526305999",\r\n    "reqTid": "1234",\r\n    "sign": "7DA288ACCD06B78EE851B618B473991A"\r\n}', 'url': u'test/test3', 'method': u'get', 'req_data': u'name=\u5218\u4e03'}
2018-07-10 15:50:55,305 - Flask - INFO - req_data:name=刘七
2018-07-10 15:50:55,305 - Flask - INFO - url中请求的参数在库中找到了匹配项
